{
	"info": {
		"_postman_id": "59be78ae-de7d-4385-b4c1-aa343daf44ac",
		"name": "Geo Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Geofence API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=139.63047&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=139.63047&ver=2147483648",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "2147483648"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=139.63047&ver=-2147483649",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "-2147483649"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=139.63047&ver=100ads",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "100ads"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lat_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=9007199254740992&lng=139.63047&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "9007199254740992"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lat_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=-9007199254740992&lng=139.63047&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "-9007199254740992"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lat_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=100ads&lng=139.63047&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "100ads"
								},
								{
									"key": "lng",
									"value": "139.63047"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lng_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=9007199254740992&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "9007199254740992"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lng_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=-9007199254740992&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "-9007199254740992"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (lng_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65560792-556b-49d2-8526-cc0361330aec",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/geofence?lat=35.610797&lng=100ads&ver=100",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"geofence"
							],
							"query": [
								{
									"key": "lat",
									"value": "35.610797"
								},
								{
									"key": "lng",
									"value": "100ads"
								},
								{
									"key": "ver",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Geo Ad Info API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af22b2c6-37b6-4f31-b073-ec0ba10e8f7f",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/adInfo?locationId=13718",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"adInfo"
							],
							"query": [
								{
									"key": "locationId",
									"value": "13718"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (locationId_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da0a80de-9d5d-4fed-a49a-e070c668df9e",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/adInfo?locationId=2147483648",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"adInfo"
							],
							"query": [
								{
									"key": "locationId",
									"value": "2147483648"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (locationId_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da0a80de-9d5d-4fed-a49a-e070c668df9e",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/adInfo?locationId=-2147483649",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"adInfo"
							],
							"query": [
								{
									"key": "locationId",
									"value": "-2147483649"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (locationId_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da0a80de-9d5d-4fed-a49a-e070c668df9e",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{02api}}/{{apiver}}/geo/adInfo?locationId=100ads",
							"host": [
								"{{02api}}"
							],
							"path": [
								"{{apiver}}",
								"geo",
								"adInfo"
							],
							"query": [
								{
									"key": "locationId",
									"value": "100ads"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}