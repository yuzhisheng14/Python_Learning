{
	"info": {
		"_postman_id": "4980c731-690e-4226-9587-9fe189c1efe5",
		"name": "Ads Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Daily Ads API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=2147483648&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "2147483648"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=-2147483649&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "-2147483649"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100ads&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100ads"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=2147483648&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "2147483648"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=-2147483649&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "-2147483649"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=100ads&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "100ads"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : limit is greater than max value 100\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=101",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : limit is less than min value 0\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=-1",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : Failed to convert property value of type java.lang.String to required type java.lang.Integer for property limit; nested exception is java.lang.NumberFormatException: For input string: \\\"\" + query.limit + \"\\\"\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=100ads",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100ads"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : offset is greater than max value 99999\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=100000&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "100000"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : offset is less than min value 0\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=-1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : Failed to convert property value of type java.lang.String to required type java.lang.Integer for property offset; nested exception is java.lang.NumberFormatException: For input string: \\\"\" + query.offset + \"\\\"\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=100ads&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "100ads"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer ",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_invalid_token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBO"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_expired)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7f35ffa-a260-4571-8d1c-2ae193bccff4",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer IQABNBbEEypRu97_UiHBOv5S0ViFRQeaTxmyE8ribVz_KTmD3xS0000000000"
							},
							{
								"key": "X-Screen-Platform",
								"type": "text",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/daily?code=23&ver=100&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"daily"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Engaged Ads API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc69fe80-2a42-4b79-98a0-ab44fd4394b1",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/engaged",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"engaged"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ac14357-25e3-4a18-b934-455c7de7fd8c",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/engaged",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"engaged"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_invalid_token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ac14357-25e3-4a18-b934-455c7de7fd8c",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBO"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/engaged",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"engaged"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_expired)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ac14357-25e3-4a18-b934-455c7de7fd8c",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBOv5S0ViFRQeaTxmyE8ribVz_KTmD3xS0000000000"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/engaged",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"engaged"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Favorite Ads List API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09ab710f-15b1-490c-95c6-3251ad46b983",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/favorite/list",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"favorite",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46654238-3a32-47cc-a4e5-32cc5956f383",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/favorite/list",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"favorite",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_invalid_token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09ab710f-15b1-490c-95c6-3251ad46b983",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBO"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/favorite/list",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"favorite",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_expired)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09ab710f-15b1-490c-95c6-3251ad46b983",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBOv5S0ViFRQeaTxmyE8ribVz_KTmD3xS0000000000"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/favorite/list",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"favorite",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Status Check API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06eeafe4-c92c-4e91-90b3-0e2d1b88db47",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/status?adId=1000000002",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"status"
							],
							"query": [
								{
									"key": "adId",
									"value": "1000000002"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8ef7bba-2a85-4a31-baa5-2dffcddf23f6",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/status?adId=1000000002",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"status"
							],
							"query": [
								{
									"key": "adId",
									"value": "1000000002"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_invalid_token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8ef7bba-2a85-4a31-baa5-2dffcddf23f6",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBO"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/status?adId=1000000002",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"status"
							],
							"query": [
								{
									"key": "adId",
									"value": "1000000002"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_expired)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8ef7bba-2a85-4a31-baa5-2dffcddf23f6",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBOv5S0ViFRQeaTxmyE8ribVz_KTmD3xS0000000000"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/status?adId=1000000002",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"status"
							],
							"query": [
								{
									"key": "adId",
									"value": "1000000002"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lock Screen Ads API Test",
			"item": [
				{
					"name": "Regular Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Status codeチェック",
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f653f49-0912-417e-9db9-d1910493451a",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=2147483648&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "2147483648"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f653f49-0912-417e-9db9-d1910493451a",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=-2147483649&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "-2147483649"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (ver_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f653f49-0912-417e-9db9-d1910493451a",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=100ads&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "100ads"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=2147483648&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "2147483648"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=-2147483649&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "-2147483649"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (code_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"request parameters is wrong.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=100ads&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "100ads"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : limit is greater than max value 100\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=101",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : limit is less than min value 0\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=-1",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (limit_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"limit : Failed to convert property value of type java.lang.String to required type java.lang.Integer for property limit; nested exception is java.lang.NumberFormatException: For input string: \\\"\" + query.limit + \"\\\"\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=100ads",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100ads"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_max)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : offset is greater than max value 99999\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=100000&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "100000"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_min)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : offset is less than min value 0\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=-1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "-1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (offset_format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 400\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(400)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Wrong Parameter\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"offset : Failed to convert property value of type java.lang.String to required type java.lang.Integer for property offset; nested exception is java.lang.NumberFormatException: For input string: \\\"\" + query.offset + \"\\\"\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=100ads&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "100ads"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"disabled": true
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_invalid_token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBO"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Request Error Case (access_token_expired)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "173c4ec5-b16f-49e1-9cb9-6d2c6a77f2b8",
								"exec": [
									"// API Response取得",
									"var jsonData = pm.response.json();",
									"// API Params取得",
									"var query = {};",
									"pm.request.url.query.all().forEach((param) => {",
									"    query[param.key] = param.value",
									"});",
									"// API Status codeチェック",
									"pm.test(\"Status code is 401\", function() {",
									"    // pm.response.to.be.clientError",
									"    pm.expect(jsonData.errors.error_code).to.eql(401)",
									"});",
									"// API Error typeチェック",
									"pm.test(\"Error type is true\", function() {",
									"    pm.expect(jsonData.errors.error).to.eql(\"Invalid Access Token\")",
									"});",
									"// API Error descriptionチェック",
									"pm.test(\"Error description is true\", function() {",
									"    pm.expect(jsonData.errors.error_description).to.eql(\"specify valid access token.\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer IQABNBbEEypRu97_UiHBOv5S0ViFRQeaTxmyE8ribVz_KTmD3xS0000000000"
							},
							{
								"key": "X-Screen-Platform",
								"value": "{{platform}}"
							}
						],
						"url": {
							"raw": "{{01api}}/{{apiver}}/ads/lockscreen?code=23&ver=30&offset=1&limit=100",
							"host": [
								"{{01api}}"
							],
							"path": [
								"{{apiver}}",
								"ads",
								"lockscreen"
							],
							"query": [
								{
									"key": "code",
									"value": "23"
								},
								{
									"key": "ver",
									"value": "30"
								},
								{
									"key": "offset",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}